{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","alert","maxDate","this","className","InputGroup","Prepend","Text","id","type","placeholder","onChange","Radio","Append","size","min","max","Button","onClick","Component","Task","task","active","important","finishDate","style","color","ButtonGroup","aria-label","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","a","b","toLowerCase","activeTasks","map","key","doneTasks","App","counter","deleteTask","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"+TA8EeA,G,iNAzEbC,SAAU,IAAIC,MAAOC,cAAcC,MAAM,EAAG,I,EAC5CC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,KAAM,EAAKP,S,EAGbQ,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZL,KAAMI,EAAEE,OAAOC,S,EAInBC,eAAiB,SAACJ,GAChB,EAAKC,SAAS,CACZJ,QAASG,EAAEE,OAAOL,W,EAItBQ,WAAa,SAACL,GACZ,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOC,S,EAInBG,YAAc,WAAO,IAAD,EAEc,EAAKX,MAA7BC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,QAASC,EAFL,EAEKA,KACnBF,EAAKW,OAAS,EACJ,EAAKC,MAAMC,IAAIb,EAAME,EAAMD,IAErC,EAAKI,SAAS,CACZL,KAAM,GACNC,SAAS,EACTC,KAAM,EAAKP,UAIfmB,MAAM,oB,wEAKR,IAAIC,EAAqC,EAA3BC,KAAKrB,QAAQG,MAAM,EAAG,GAAS,EAG7C,OAFAiB,GAAoB,SAGlB,yBAAKE,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAYD,UAAU,+BACpB,kBAACC,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBH,UAAU,qBAAqBI,GAAG,wBAAnD,mBAEF,2BAAOC,KAAK,OAAOC,YAAY,gBAAgBhB,MAAOS,KAAKjB,MAAMC,KAAMwB,SAAUR,KAAKb,aACtF,kBAACe,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWO,MAAZ,CAAkBH,KAAK,WAAWrB,QAASe,KAAKjB,MAAME,QAASoB,GAAG,YAAYG,SAAUR,KAAKR,kBAE/F,kBAACU,EAAA,EAAWQ,OAAZ,KACE,kBAACR,EAAA,EAAWE,KAAZ,CAAiBH,UAAU,sBAA3B,gBAGJ,kBAACC,EAAA,EAAD,CAAYS,KAAK,KAAKV,UAAU,+BAC9B,kBAACC,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBH,UAAU,qBAAqBI,GAAG,wBAAnD,sBAEF,2BAAOC,KAAK,OAAOf,MAAOS,KAAKjB,MAAMG,KAAM0B,IAAKZ,KAAKrB,QAASkC,IAAKd,EAASS,SAAUR,KAAKP,aAC3F,kBAACS,EAAA,EAAWQ,OAAZ,KACE,kBAACI,EAAA,EAAD,CAAQb,UAAU,uBAAuBc,QAASf,KAAKN,aAAvD,gB,GApEUsB,c,QC+BPC,EA/BF,SAACrB,GAEZ,IAFsB,EAMoCA,EAAMsB,KAAxDlC,EANc,EAMdA,KAAME,EANQ,EAMRA,KAAMmB,EANE,EAMFA,GAAIc,EANF,EAMEA,OAAQC,EANV,EAMUA,UAAWC,EANrB,EAMqBA,WAE3C,GAAIF,EACF,OACE,yBAAKlB,UAAU,QACb,4BAAQqB,MAAOF,EATP,CACZG,MAAO,OAQgC,MAAOvC,GAD5C,SACgE,8BAAOE,EAAP,KAC9D,kBAACsC,EAAA,EAAD,CAAab,KAAK,KAAKV,UAAU,OAAOwB,aAAW,iBACjD,kBAACX,EAAA,EAAD,CAAQb,UAAU,0BAA0Bc,QAAS,kBAAMnB,EAAM8B,OAAOrB,KAAxE,yBACA,kBAACS,EAAA,EAAD,CAAQb,UAAU,iBAAiBc,QAAS,kBAAMnB,EAAM+B,OAAOtB,KAA/D,eAON,IAAMuB,EAAS,IAAIhD,KAAKyC,GAAYQ,iBACpC,OACE,yBAAK5B,UAAU,QACb,4BAAQA,UAAU,YAAYjB,GADhC,cACyD,kCAAQ4C,GAC/D,kBAACd,EAAA,EAAD,CAAQH,KAAK,KAAKV,UAAU,4BAA4Bc,QAAS,kBAAMnB,EAAM+B,OAAOtB,KAApF,OCwBOyB,EAjDE,SAAClC,GAEhB,IAAMuB,EAASvB,EAAMmC,MAAMC,QAAO,SAAAd,GAAI,OAAIA,EAAKC,UACzCc,EAAOrC,EAAMmC,MAAMC,QAAO,SAAAd,GAAI,OAAKA,EAAKC,UAE1Cc,EAAKtC,QAAU,GACjBsC,EAAKC,MAAK,SAACC,EAAGC,GACZ,OAAID,EAAEd,WAAae,EAAEf,WACZ,EAELc,EAAEd,WAAae,EAAEf,YACX,EAEH,KAGPF,EAAOxB,QAAU,GACnBwB,EAAOe,MAAK,SAACC,EAAGC,GAKd,OAHAD,EAAIA,EAAEnD,KAAKqD,gBACXD,EAAIA,EAAEpD,KAAKqD,gBAEQ,EACfF,EAAIC,EAAU,EACX,KAKX,IAAME,EAAcnB,EAAOoB,KAAI,SAAArB,GAAI,OAAI,kBAAC,EAAD,CAAMsB,IAAKtB,EAAKb,GAAIa,KAAMA,EAAMS,OAAQ/B,EAAM+B,OAAQD,OAAQ9B,EAAM8B,YACrGe,EAAYR,EAAKM,KAAI,SAAArB,GAAI,OAAI,kBAAC,EAAD,CAAMsB,IAAKtB,EAAKb,GAAIa,KAAMA,EAAMS,OAAQ/B,EAAM+B,OAAQD,OAAQ9B,EAAM8B,YAEvG,OACE,oCACE,yBAAKzB,UAAU,UACb,wBAAIA,UAAU,aAAd,yBACCqC,EAAY3C,OAAS,EAAI2C,EAAc,+FAG1C,yBAAKrC,UAAU,QACb,wBAAIA,UAAU,aAAd,0BAA4C,4BAAKgC,EAAKtC,SACrDsC,EAAKtC,OAAS,GAAK,0BAAMM,UAAU,mBAAhB,0DACnBwC,EAAU3D,MAAM,EAAG,MCmBb4D,G,iNA1DbC,QAAU,E,EACV5D,MAAQ,CACNgD,MAAO,CACL,CAAE1B,GAAI,EAAGrB,KAAM,sCAA6BE,KAAM,aAAckC,WAAW,EAAMD,QAAQ,EAAME,WAAY,Q,EAI/GuB,WAAa,SAACvC,GAEZ,IAAI0B,EAAK,YAAO,EAAKhD,MAAMgD,OAC3BA,EAAQA,EAAMC,QAAO,SAAAd,GAAI,OAAIA,EAAKb,KAAOA,KACzC,EAAKhB,SAAS,CACZ0C,W,EAIJc,iBAAmB,SAACxC,GAClB,IAAM0B,EAAQe,MAAMC,KAAK,EAAKhE,MAAMgD,OACpCA,EAAMiB,SAAQ,SAAA9B,GACRA,EAAKb,KAAOA,IACda,EAAKC,QAAS,EACdD,EAAKG,YAAa,IAAIzC,MAAOqE,cAGjC,EAAK5D,SAAS,CACZ0C,W,EAIJmB,QAAU,SAAClE,EAAME,EAAMkC,GACrB,IAAMF,EAAO,CACXb,GAAI,EAAKsC,QACT3D,OACAE,OACAkC,YACAD,QAAQ,EACRE,WAAY,MASd,OAPA,EAAKsB,UAEL,EAAKtD,UAAS,SAAA8D,GAAS,MAAK,CAC1BpB,MAAM,GAAD,mBAAMoB,EAAUpB,OAAhB,CAAuBb,SAIvB,G,wEAIP,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,CAASJ,IAAKG,KAAKkD,UACnB,kBAAC,EAAD,CAAUnB,MAAO/B,KAAKjB,MAAMgD,MAAOJ,OAAQ3B,KAAK4C,WAAYlB,OAAQ1B,KAAK6C,wB,GArD/D7B,cCClBoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d6bcd0f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { InputGroup, Button } from 'react-bootstrap';\r\nimport './AddTask.css';\r\nclass AddTask extends Component {\r\n\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n  state = {\r\n    text: '',\r\n    checked: false,\r\n    date: this.minDate\r\n  }\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClick = () => {\r\n\r\n    const { text, checked, date } = this.state;\r\n    if (text.length > 2) {\r\n      const add = this.props.add(text, date, checked);\r\n      if (add) {\r\n        this.setState({\r\n          text: '',\r\n          checked: false,\r\n          date: this.minDate\r\n        })\r\n      }\r\n    } else {\r\n      alert(\"Minimum 3 znaki\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <InputGroup className=\"mb-3 justify-content-center\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text className=\"bg-main text-white\" id=\"inputGroup-sizing-sm\">Nazwa zadania:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <input type=\"text\" placeholder=\"dodaj zadanie\" value={this.state.text} onChange={this.handleText} />\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Radio type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox} />\r\n          </InputGroup.Prepend>\r\n          <InputGroup.Append>\r\n            <InputGroup.Text className=\"bg-main text-white\">Ważne</InputGroup.Text>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n        <InputGroup size=\"md\" className=\"mb-3 justify-content-center\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text className=\"bg-main text-white\" id=\"inputGroup-sizing-md\">Wykonać do: </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <input type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n          <InputGroup.Append>\r\n            <Button className=\"btn btn-info bg-main\" onClick={this.handleClick}>Dodaj</Button></InputGroup.Append>\r\n        </InputGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\n\r\nconst Task = (props) => {\r\n\r\n  const style = {\r\n    color: 'red',\r\n  }\r\n\r\n  const { text, date, id, active, important, finishDate } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <div className=\"my-1\">\r\n        <strong style={important ? style : null}>{text}</strong> - do <span>{date} </span>\r\n        <ButtonGroup size=\"sm\" className=\"px-2\" aria-label=\"Basic example\">\r\n          <Button className=\"btn btn-success bg-main\" onClick={() => props.change(id)}>Zostało zrobione</Button>\r\n          <Button className=\"btn btn-danger\" onClick={() => props.delete(id)}>usuń</Button>\r\n        </ButtonGroup>\r\n\r\n      </div>\r\n    );\r\n  } else {\r\n\r\n    const finish = new Date(finishDate).toLocaleString()\r\n    return (\r\n      <div className=\"my-1\">\r\n        <strong className=\"doneTask\">{text}</strong> - wykonano<span> {finish}</span>\r\n        <Button size=\"sm\" className=\"btn btn-info bg-main mx-2\" onClick={() => props.delete(id)}>X</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const active = props.tasks.filter(task => task.active);\r\n  const done = props.tasks.filter(task => !task.active);\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0\r\n    })\r\n  }\r\n\r\n\r\n  const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n  const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h1 className=\"display-4\">Zadania do zrobienia:</h1>\r\n        {activeTasks.length > 0 ? activeTasks : <p>Wygląda na to, że nie masz już nic do zrobienia!</p>}\r\n      </div>\r\n\r\n      <div className=\"done\">\r\n        <h3 className=\"display-4\">Wykonanych zadań: <em>{done.length}</em></h3>\r\n        {done.length > 5 && <span className=\"text-muted mb-2\">wyświetlonych jest jedynie 5 ostatnich zadań</span>}\r\n        {doneTasks.slice(0, 5)}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\nimport './App.css';\n\nclass App extends Component {\n  counter = 2\n  state = {\n    tasks: [\n      { id: 1, text: \"nauczyć się programowania\", date: '2020-12-24', important: true, active: true, finishDate: null },\n    ]\n  }\n\n  deleteTask = (id) => {\n\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter(task => task.id !== id)\n    this.setState({\n      tasks\n    })\n  }\n\n  changeTaskStatus = (id) => {\n    const tasks = Array.from(this.state.tasks);\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks\n    })\n  }\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text, // tekst z inputa\n      date, //tekst z inputa\n      important, //wartość z inputa\n      active: true,\n      finishDate: null\n    }\n    this.counter++\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n\n\n    return true\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AddTask add={this.addTask} />\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}